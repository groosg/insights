{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hello there \u00b6 My name is Groosg, I'm a software engineer with experience in building and running applications and distributed systems. More recently, I have been focusing on the security of applications and cloud environments. I decided to put together this website to have some fun and to share technical stuff. I don't know exactly which stuff but I think we'll figure this out. I hope you enjoy the content. For feedback and interaction, you can find me on Twitter . Speaking of Twitter, this website was created live on Twitter and this was really fun - check this out .","title":"Home"},{"location":"#hello-there","text":"My name is Groosg, I'm a software engineer with experience in building and running applications and distributed systems. More recently, I have been focusing on the security of applications and cloud environments. I decided to put together this website to have some fun and to share technical stuff. I don't know exactly which stuff but I think we'll figure this out. I hope you enjoy the content. For feedback and interaction, you can find me on Twitter . Speaking of Twitter, this website was created live on Twitter and this was really fun - check this out .","title":"Hello there"},{"location":"tips/","text":"Tips \u00b6 This section contains some miscellaneous content. Check the left menu for some tips about software development and more! (just joking, there is nothing else )","title":"Tips"},{"location":"tips/#tips","text":"This section contains some miscellaneous content. Check the left menu for some tips about software development and more! (just joking, there is nothing else )","title":"Tips"},{"location":"tips/gh_setup/","text":"A Serious GitHub Account Setup Guide \u00b6 In this guide, I'm going to show you how to configure your GitHub account to improve security and privacy. This guide is somewhat opinionated about some settings, feel free to adjust as you wish. The GitHub documentation is very complete, so for specific instructions and commands, follow the links and apply the recommendations in this guide. Enable 2FA \u00b6 Enable two-factor authentication - follow the instructions in the GitHub docs. Associate your 2FA with a password manager with TOTP support. Consider a password manager instead of a specialized TOTP auth app (see the info box below). Don't use SMS. Store your recovery codes in a secure location. I strongly recommend storing the recovery codes in a password manager as well. Even if you lose your phone, you can access the password manager via browser and retrieve the recovery codes. Optional: Consider configuring a security key . A security key will allow you to log in using Face ID, Touch ID, etc., or even a YubiKey. It's time for a password manager If you don't use a password manager, it's time for you to consider one. Instead of relying on the browsers' password storage across multiple devices (which is ok but not great) consider creating an account in a password manager service and centralizing your passwords, TOTP access, and other sensitive notes. I use 1Password and recommend it as a user (I have no commercial affiliation with them). It's not free but a personal account is really cheap. Another interesting alternative is bitwarden . I haven't used bitwarden, but I have heard good things about them. Configure SSH key \u00b6 Generate an SSH key to access GitHub via the git CLI. Make sure you add the SSH key to the ssh-agent. It will make things transparent for you in the day-to-day. Don't use username and password to fetch and push code. Email Privacy \u00b6 Go to the email settings and mark the checkbox Keep my email addresses private . Set your no-reply email <username>@users.noreply.github.com as the commit email address in Git . git config --global user.email \"<username>@users.noreply.github.com\" In the same email settings page, mark the checkbox Block command line pushes that expose my email - see here an explanation . See this documentation for more details . GitHub emails used in commits are publicly available to anyone Every commit pushed to public GitHub repos is easily available via the GitHub API, and so are the emails used in these commits - see an example here . Configure Commit Signature Verification \u00b6 See the commit signature verification page for an explanation. Generate a new GPG key for GitHub. (see waning box below) When prompted for the GPG key creation, use the following recommendations: Please select what kind of key you want : Use a sing only key (4) RSA (sign only) . What keysize do you want? : Use the size recommended in the GitHub docs 4096 . Key is valid for? : Specify a time to live 5y . Email address : Use your no-reply address <username>@users.noreply.github.com . And, of course, set a reosanable passphrase. Follow the remaining steps to add your GPG key to GitHub and configure Git with your signing key . Enable vigilante mode . After you save your GPG public key on GitHub, on the same page mark the checkbox Flag unsigned commits as unverified . If anyone tries to impersonate you, the commit will be flagged as Unverified . GPG key email leak Avoid using an existing key since GitHub will leak all emails assigned to your GPG key regardless if they are associated with your GitHub account or not. See this example , here you can find 6 distinct emails (at the moment of this writing), including emails that have nothing to do with GitHub. Why are we configuring commit signature verification? Git impersonation is a real problem that, while most of the time is used only for bad jokes, can cause a lot of confusion and bring some real software supply chain concerns. There is plenty of content on the Internet about this subject. A good one is the blog post How to Spoof Any User on Github\u2026and What to Do to Prevent It .","title":"GitHub Account Setup"},{"location":"tips/gh_setup/#a-serious-github-account-setup-guide","text":"In this guide, I'm going to show you how to configure your GitHub account to improve security and privacy. This guide is somewhat opinionated about some settings, feel free to adjust as you wish. The GitHub documentation is very complete, so for specific instructions and commands, follow the links and apply the recommendations in this guide.","title":"A Serious GitHub Account Setup Guide"},{"location":"tips/gh_setup/#enable-2fa","text":"Enable two-factor authentication - follow the instructions in the GitHub docs. Associate your 2FA with a password manager with TOTP support. Consider a password manager instead of a specialized TOTP auth app (see the info box below). Don't use SMS. Store your recovery codes in a secure location. I strongly recommend storing the recovery codes in a password manager as well. Even if you lose your phone, you can access the password manager via browser and retrieve the recovery codes. Optional: Consider configuring a security key . A security key will allow you to log in using Face ID, Touch ID, etc., or even a YubiKey. It's time for a password manager If you don't use a password manager, it's time for you to consider one. Instead of relying on the browsers' password storage across multiple devices (which is ok but not great) consider creating an account in a password manager service and centralizing your passwords, TOTP access, and other sensitive notes. I use 1Password and recommend it as a user (I have no commercial affiliation with them). It's not free but a personal account is really cheap. Another interesting alternative is bitwarden . I haven't used bitwarden, but I have heard good things about them.","title":"Enable 2FA"},{"location":"tips/gh_setup/#configure-ssh-key","text":"Generate an SSH key to access GitHub via the git CLI. Make sure you add the SSH key to the ssh-agent. It will make things transparent for you in the day-to-day. Don't use username and password to fetch and push code.","title":"Configure SSH key"},{"location":"tips/gh_setup/#email-privacy","text":"Go to the email settings and mark the checkbox Keep my email addresses private . Set your no-reply email <username>@users.noreply.github.com as the commit email address in Git . git config --global user.email \"<username>@users.noreply.github.com\" In the same email settings page, mark the checkbox Block command line pushes that expose my email - see here an explanation . See this documentation for more details . GitHub emails used in commits are publicly available to anyone Every commit pushed to public GitHub repos is easily available via the GitHub API, and so are the emails used in these commits - see an example here .","title":"Email Privacy"},{"location":"tips/gh_setup/#configure-commit-signature-verification","text":"See the commit signature verification page for an explanation. Generate a new GPG key for GitHub. (see waning box below) When prompted for the GPG key creation, use the following recommendations: Please select what kind of key you want : Use a sing only key (4) RSA (sign only) . What keysize do you want? : Use the size recommended in the GitHub docs 4096 . Key is valid for? : Specify a time to live 5y . Email address : Use your no-reply address <username>@users.noreply.github.com . And, of course, set a reosanable passphrase. Follow the remaining steps to add your GPG key to GitHub and configure Git with your signing key . Enable vigilante mode . After you save your GPG public key on GitHub, on the same page mark the checkbox Flag unsigned commits as unverified . If anyone tries to impersonate you, the commit will be flagged as Unverified . GPG key email leak Avoid using an existing key since GitHub will leak all emails assigned to your GPG key regardless if they are associated with your GitHub account or not. See this example , here you can find 6 distinct emails (at the moment of this writing), including emails that have nothing to do with GitHub. Why are we configuring commit signature verification? Git impersonation is a real problem that, while most of the time is used only for bad jokes, can cause a lot of confusion and bring some real software supply chain concerns. There is plenty of content on the Internet about this subject. A good one is the blog post How to Spoof Any User on Github\u2026and What to Do to Prevent It .","title":"Configure Commit Signature Verification"},{"location":"tips/mkdocs_twitter_card/","text":"Twitter Card with Material for MkDocs \u00b6 This tutorial shows how to implement a Twitter card with Material for MkDocs . Material for MkDocs supports social cards in the Insiders model, which is a version with a set of features exclusive for sponsors. Since I'm just an average Joe trying to share my stuff on Twitter, I decided to take a stab and implement the Twitter card myself. Checking the Twitter documentation you can see that it's nothing else than a set of HTML meta tags and the Material for MkDocs documentation even gives you the path with the template variables that you need to use to fill these meta tags. Consider sponsoring Material for MkDocs If your company is using Material for MkDocs consider becoming a sponsor to get access to the hot features instead of using hacks such as the one presented here Create an override block \u00b6 The first thing we need to do is create an override block that allows adding content to the HTML head tag, for this we use the extrahead block. # theme/main.html {% extends \"base.html\" %} {% block extrahead %} {% if config.extra.card %} <!-- begin:twitter card --> < meta name = \"twitter:card\" content = \"{{ config.extra.card.type | e }}\" /> < meta name = \"twitter:site\" content = \"{{ config.extra.card.twitter | e }}\" /> < meta name = \"twitter:creator\" content = \"{{ config.extra.card.twitter | e }}\" /> < meta property = \"og:url\" content = \"{{ page.canonical_url }}\" /> {% if page and page.meta.card and page.meta.card.title %} < meta property = \"og:title\" content = \"{{ page.meta.card.title }}\" /> {% else %} < meta property = \"og:title\" content = \"{{ page.title }}\" /> {% endif %} {% if page and page.meta.card and page.meta.card.description %} < meta property = \"og:description\" content = \"{{ page.meta.card.description }}\" /> {% else %} < meta property = \"og:description\" content = \"{{ config.site_description }}\" /> {% endif %} < meta property = \"og:image\" content = \"{{ [config.site_url, config.extra.card.image] | join }}\" /> < meta property = \"og:image:type\" content = \"image/png\" > <!-- end:twitter card --> {% endif %} {% endblock %} Note that the main.html file goes under the path defined in the custom_dir configuration in the mkdocs.yml file, which in this case is theme/ . # mkdocs.yml ... theme : name : material custom_dir : theme ... Configure the card \u00b6 In this implementation, we are using some extra configuration to retrieve the card definitions. So in the mkdocs.yml file add the card attribute under extra : # mkdocs.yml ... extra : social : - icon : fontawesome/brands/github link : https://github.com/groosg - icon : fontawesome/brands/twitter link : https://twitter.com/gr00sg ... card : twitter : \"@gr00sg\" image : assets/images/twitter_card.png type : summary ... twitter - is the Twitter handler for the author. image - is the path for the image used in the card. It also goes under the directory defined in custom_dir , theme in this case. type - is the type of the Twitter card. In this case it will be be summary or summary_large_image (see the Twitter docs for a complete reference). Customize the card title and description \u00b6 By default, the card will use the page title and the site description to fill the og:title and og:description tags. To override this behavior, we can add a card property to the page front matter with the properties title and description . Add the following lines at the top of a Markdown file: --- card : title : \"A Serious GitHub Account Setup Guide\" description : \"In this guide, I'm going to show you how to configure your GitHub account to improve security and privacy.\" --- ... Note We are intentionally making these properties specific to the card because right now they are not used to customize the actual page title and description (I might do that later and refactor this). The built-in meta plugin is another feature that the Insiders version takes care of for us.","title":"Twitter Card with Material for MkDocs"},{"location":"tips/mkdocs_twitter_card/#twitter-card-with-material-for-mkdocs","text":"This tutorial shows how to implement a Twitter card with Material for MkDocs . Material for MkDocs supports social cards in the Insiders model, which is a version with a set of features exclusive for sponsors. Since I'm just an average Joe trying to share my stuff on Twitter, I decided to take a stab and implement the Twitter card myself. Checking the Twitter documentation you can see that it's nothing else than a set of HTML meta tags and the Material for MkDocs documentation even gives you the path with the template variables that you need to use to fill these meta tags. Consider sponsoring Material for MkDocs If your company is using Material for MkDocs consider becoming a sponsor to get access to the hot features instead of using hacks such as the one presented here","title":"Twitter Card with Material for MkDocs"},{"location":"tips/mkdocs_twitter_card/#create-an-override-block","text":"The first thing we need to do is create an override block that allows adding content to the HTML head tag, for this we use the extrahead block. # theme/main.html {% extends \"base.html\" %} {% block extrahead %} {% if config.extra.card %} <!-- begin:twitter card --> < meta name = \"twitter:card\" content = \"{{ config.extra.card.type | e }}\" /> < meta name = \"twitter:site\" content = \"{{ config.extra.card.twitter | e }}\" /> < meta name = \"twitter:creator\" content = \"{{ config.extra.card.twitter | e }}\" /> < meta property = \"og:url\" content = \"{{ page.canonical_url }}\" /> {% if page and page.meta.card and page.meta.card.title %} < meta property = \"og:title\" content = \"{{ page.meta.card.title }}\" /> {% else %} < meta property = \"og:title\" content = \"{{ page.title }}\" /> {% endif %} {% if page and page.meta.card and page.meta.card.description %} < meta property = \"og:description\" content = \"{{ page.meta.card.description }}\" /> {% else %} < meta property = \"og:description\" content = \"{{ config.site_description }}\" /> {% endif %} < meta property = \"og:image\" content = \"{{ [config.site_url, config.extra.card.image] | join }}\" /> < meta property = \"og:image:type\" content = \"image/png\" > <!-- end:twitter card --> {% endif %} {% endblock %} Note that the main.html file goes under the path defined in the custom_dir configuration in the mkdocs.yml file, which in this case is theme/ . # mkdocs.yml ... theme : name : material custom_dir : theme ...","title":"Create an override block"},{"location":"tips/mkdocs_twitter_card/#configure-the-card","text":"In this implementation, we are using some extra configuration to retrieve the card definitions. So in the mkdocs.yml file add the card attribute under extra : # mkdocs.yml ... extra : social : - icon : fontawesome/brands/github link : https://github.com/groosg - icon : fontawesome/brands/twitter link : https://twitter.com/gr00sg ... card : twitter : \"@gr00sg\" image : assets/images/twitter_card.png type : summary ... twitter - is the Twitter handler for the author. image - is the path for the image used in the card. It also goes under the directory defined in custom_dir , theme in this case. type - is the type of the Twitter card. In this case it will be be summary or summary_large_image (see the Twitter docs for a complete reference).","title":"Configure the card"},{"location":"tips/mkdocs_twitter_card/#customize-the-card-title-and-description","text":"By default, the card will use the page title and the site description to fill the og:title and og:description tags. To override this behavior, we can add a card property to the page front matter with the properties title and description . Add the following lines at the top of a Markdown file: --- card : title : \"A Serious GitHub Account Setup Guide\" description : \"In this guide, I'm going to show you how to configure your GitHub account to improve security and privacy.\" --- ... Note We are intentionally making these properties specific to the card because right now they are not used to customize the actual page title and description (I might do that later and refactor this). The built-in meta plugin is another feature that the Insiders version takes care of for us.","title":"Customize the card title and description"}]}